<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slabs.exchange.mapper.back.CoinMapper">
  <resultMap id="BaseResultMap" type="com.slabs.exchange.model.entity.Coin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="verbose_name" jdbcType="VARCHAR" property="verboseName" />
    <result column="precision" jdbcType="INTEGER" property="precision" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, verbose_name, precision
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_coin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_coin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.slabs.exchange.model.entity.Coin" useGeneratedKeys="true" keyProperty="id">
    insert into t_coin (name, verbose_name,
      precision)
    values (#{name,jdbcType=VARCHAR}, #{verboseName,jdbcType=VARCHAR},
      #{precision,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.slabs.exchange.model.entity.Coin">
    insert into t_coin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="verboseName != null">
        verbose_name,
      </if>
      <if test="precision != null">
        precision,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="verboseName != null">
        #{verboseName,jdbcType=VARCHAR},
      </if>
      <if test="precision != null">
        #{precision,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.slabs.exchange.model.entity.Coin">
    update t_coin
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="verboseName != null">
        verbose_name = #{verboseName,jdbcType=VARCHAR},
      </if>
      <if test="precision != null">
        precision = #{precision,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slabs.exchange.model.entity.Coin">
    update t_coin
    set name = #{name,jdbcType=VARCHAR},
      verbose_name = #{verboseName,jdbcType=VARCHAR},
      precision = #{precision,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCoins" resultMap="BaseResultMap">
    select * from t_coin c, project_coin pc
    where c.id = pc.coin_id and pc.coin_type in ('hos', 'usdt')
  </select>

  <select id="getNonsymbolCoin" resultMap="BaseResultMap">
    select * from t_coin c, project_coin pc
    where c.id = pc.coin_id
    and pc.coin_type = 'other' and c.id not in (select commodity from t_symbol)
  </select>

</mapper>